---
import ThemeToggle from "./ThemeToggle.astro"

const navItems = [
  {
    title: "Experiencia",
    label: "experiencia",
    url: "/#experiencia",
  },
  {
    title: "Proyectos",
    label: "proyectos",
    url: "/#proyectos",
  },
  {
    title: "Sobre m√≠",
    label: "sobre-mi",
    url: "/#sobre-mi",
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "mailto:derian.nazareno@hotmail.com",
  },
]
---

<header class="fixed top-0 left-0 right-0 z-30 flex justify-center px-4 pt-6">
  <div class="w-full max-w-6xl">
    <nav
      class="flex flex-col gap-4 rounded-2xl border border-slate-900/10 bg-white/80 px-5 py-4 text-sm shadow-lg shadow-indigo-200/60 backdrop-blur-xl transition dark:border-white/10 dark:bg-slate-900/70 dark:shadow-black/40 sm:flex-row sm:items-center sm:justify-between"
    >
      <div class="flex items-center justify-between gap-4">
        <a
          href="/"
          class="text-xs font-semibold uppercase tracking-[0.4em] text-slate-600/80 transition hover:text-emerald-500 dark:text-slate-200/80 dark:hover:text-emerald-300"
        >
          DerianDev17
        </a>
        <ThemeToggle />
      </div>
      <div class="flex flex-wrap items-center justify-center gap-2 sm:justify-end">
        {
          navItems.map((link) => (
            <a
              class="nav-link relative inline-flex items-center rounded-full px-3 py-1.5 text-[0.65rem] font-semibold uppercase tracking-[0.32em] text-slate-600/80 transition hover:bg-emerald-400/10 hover:text-emerald-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-emerald-400 dark:text-slate-200/70 dark:hover:text-emerald-300"
              aria-label={link.label}
              href={link.url}
            >
              {link.title}
            </a>
          ))
        }
      </div>
    </nav>
  </div>
</header>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") === entry.target.id) {
              item.classList.add("nav-link--active")
            } else {
              item.classList.remove("nav-link--active")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  header nav {
    transition: transform 0.4s ease, box-shadow 0.4s ease;
  }

  .nav-link--active {
    color: rgb(16 185 129);
    background: rgba(16, 185, 129, 0.14);
    box-shadow: 0 18px 42px -24px rgba(16, 185, 129, 0.8);
  }

  html.dark .nav-link--active {
    color: rgb(134 239 172);
    background: rgba(16, 185, 129, 0.2);
    box-shadow: 0 18px 42px -24px rgba(16, 185, 129, 0.7);
  }
</style>
